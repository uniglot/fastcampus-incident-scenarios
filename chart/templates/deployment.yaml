{{- if eq .Values.workload.kind "Deployment" -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "chart.fullname" . }}
  labels:
    {{- include "chart.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.workload.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.workload.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "chart.labels" . | nindent 8 }}
        {{- with .Values.workload.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.workload.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "chart.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.workload.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          {{- if .Values.workload.podSecurityContext }}
          securityContext:
            {{- toYaml .Values.workload.securityContext | nindent 12 }}
          {{- end }}
          {{- if .Values.workload.image.ecr.enabled }}
          image: "{{ .Values.common.awsAccount }}.dkr.ecr.{{ .Values.common.awsRegion }}.amazonaws.com/{{ .Values.workload.image.ecr.repository }}:{{ .Values.workload.image.tag }}"
          {{- else }}
          image: "{{ .Values.workload.image.repository }}:{{ .Values.workload.image.tag }}"
          {{- end }}
          imagePullPolicy: {{ .Values.workload.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.workload.containerPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: {{ .Values.workload.probes.livenessProbe.path }}
              port: http
            {{- if .Values.workload.probes.livenessProbe.conditions }}
            {{- toYaml .Values.workload.probes.livenessProbe.conditions | nindent 12 }}
            {{- end }}
          readinessProbe:
            httpGet:
              path: {{ .Values.workload.probes.readinessProbe.path }}
              port: http
            {{- if .Values.workload.probes.readinessProbe.conditions }}
            {{- toYaml .Values.workload.probes.readinessProbe.conditions | nindent 12 }}
            {{- end }}
          resources:
            {{- toYaml .Values.workload.resources | nindent 12 }}
          {{- if .Values.workload.envFrom }}
          envFrom:
            {{- toYaml .Values.workload.envFrom | nindent 12 }}
          {{- end }}
      {{- with .Values.workload.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.workload.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.workload.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}