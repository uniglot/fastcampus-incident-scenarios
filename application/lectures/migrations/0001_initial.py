# Generated by Django 4.2.13 on 2024-06-03 11:13

from django.db import migrations, models
import django.db.models.deletion


def create_initial_records(apps, schema_editor):
    Department = apps.get_model("lectures", "Department")
    Person = apps.get_model("lectures", "Person")
    Professor = apps.get_model("lectures", "Professor")
    Lecture = apps.get_model("lectures", "Lecture")

    Department.objects.bulk_create([
        Department(name="컴퓨터공학과", code="CS", category="ENG"),
        Department(name="화학공학과", code="CE", category="ENG"),
        Department(name="물리학과", code="PH", category="SCI"),
        Department(name="영어영문학과", code="EL", category="LIT"),
        Department(name="불어불문학과", code="FL", category="LIT"),
        Department(name="회화과", code="PA", category="ART"),
    ])

    departments = Department.objects.all()
    people = []
    family_names = ["김", "이", "박", "최", "정", "강"]
    given_names = [
        "민준",
        "서윤",
        "서준",
        "서연",
        "예준",
        "지우",
        "도윤",
        "하준",
        "수아",
        "서연",
        "예준",
        "지우",
    ]

    count = 0
    for family_name in family_names:
        for given_name in given_names:
            people.append(Person(name=family_name+given_name, department=departments[count%6]))
            count += 1
    Person.objects.bulk_create(people)

    Professor.objects.bulk_create([
        Professor(name="Prof. Kim", email="kim@test.com", department=departments[0]),
        Professor(name="Prof. Lee", email="lee@test.com", department=departments[1]),
        Professor(name="Prof. Park", email="park@test.com", department=departments[2]),
        Professor(name="Prof. Choi", email="choi@test.com", department=departments[3]),
        Professor(name="Prof. Jeong", email="jeong@test.com", department=departments[4]),
        Professor(name="Prof. Kang", email="kang@test.com", department=departments[5]),
    ])

    professors = Professor.objects.all()
    lectures = []
    prefixes = ["기본", "고급", "현대", "고대", "중세"]
    topics = ["진", "케이틀린", "애쉬", "징크스", "럭스"]
    suffixes = ["의 이해", "의 역사", "학 개론", "학 입문", "의 응용"]

    count = 0
    for prefix in prefixes:
        for topic in topics:
            for suffix in suffixes:
                lectures.append(
                    Lecture(
                        name=f"{prefix} {topic}{suffix}",
                        code=topic+str(count),
                        professor=professors[count%6],
                        register_limit=30,
                    )
                )
                count += 1
    Lecture.objects.bulk_create(lectures)


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('code', models.CharField(max_length=2)),
                ('category', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lectures.department')),
                ('total_credit', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Professor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lectures.department')),
                ('email', models.EmailField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='Lecture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('code', models.CharField(max_length=20)),
                ('credit', models.IntegerField(default=3)),
                ('register_limit', models.IntegerField()),
                ('professor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lectures.professor')),
                ('students', models.ManyToManyField(to='lectures.person')),
            ],
        ),
        migrations.RunPython(create_initial_records),
    ]
